-- Test head function  

data Nat : Type where
  Z : Nat
  S : Nat -> Nat

data List A : Type where
  Nil : List A
  Cons : A -> List A -> List A

-- Head function with default
head : {A : Type} -> List A -> A -> A
head Nil default = default  
head (Cons x xs) default = x

-- Test
testList : List Nat
testList = Cons {Nat} Z (Nil {Nat})

main : Nat
main = head {Nat} testList (S Z)